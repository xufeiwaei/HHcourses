/* Copyright (c) 2002, Theodore Roth
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions are met:

   * Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in
     the documentation and/or other materials provided with the
     distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE. */

/* $Id: main_page.dox,v 1.15.2.1 2004/04/05 21:40:50 joerg_wunsch Exp $ */

/** \mainpage AVR Libc

The latest version of this document is always available from
http://savannah.nongnu.org/projects/avr-libc/

The AVR Libc package provides a subset of the standard C library for Atmel AVR
8-bit RISC microcontrollers. In addition, the library provides the basic
startup code needed by most applications.

There is a wealth of information in this document which goes beyond simply
describing the interfaces and routines provided by the library. We hope that
this document provides enough information to get a new AVR developer up to
speed quickly using the freely available development tools: binutils, gcc
avr-libc and many others.

If you find yourself stuck on a problem which this document doesn't quite
address, you may wish to post a message to the avr-gcc mailing list. Most of
the developers of the AVR binutils and gcc ports in addition to the devleopers
of avr-libc subscribe to the list, so you will usually be able to get your
problem resolved. You can subscribe to the list at
http://www.avr1.org/mailman/listinfo/avr-gcc-list/. Before posting to the
list, you might want to try reading the \ref FAQ chapter of this document.

\note This document is a work in progress. As such, it may contain incorrect
information. If you find a mistake, please send an email to
avr-libc-dev@nongnu.org describing the mistake. Also, send us an
email if you find that a specific topic is missing from the document.

\section supp_devices Supported Devices

\addindex supported devices

The following is a list of AVR devices currently supported by the library.

\par AT90S Type Devices:

- at90s1200 \ref supp_dev_footnote_one "[1]"
- at90s2313
- at90s2323
- at90s2333
- at90s2343
- at90s4414
- at90s4433
- at90s4434
- at90s8515
- at90c8534
- at90s8535

\par ATmega Type Devices:

- atmega8
- atmega103
- atmega128
- atmega16
- atmega161
- atmega162
- atmega163
- atmega169
- atmega32
- atmega323
- atmega64 [untested]
- atmega8515 [untested]
- atmega8535 [untested]

\par ATtiny Type Devices:

- attiny11 \ref supp_dev_footnote_one "[1]"
- attiny12 \ref supp_dev_footnote_one "[1]"
- attiny15 \ref supp_dev_footnote_one "[1]"
- attiny22
- attiny26
- attiny28 \ref supp_dev_footnote_one "[1]"

\par Misc Devices:

- at94K \ref supp_dev_footnote_two "[2]"
- at76c711 \ref supp_dev_footnote_three "[3]"
- at43usb320
- at43usb355
- at86rf401

\anchor supp_dev_footnote_one

\note <b>[1]</b> Assembly only. There is no direct support for these devices to be
programmed in C since they do not have a RAM based stack.  Still, it could be
possible to program them in C, see the \ref faq_tinyavr_c "FAQ" for an option.

\anchor supp_dev_footnote_two

\note <b>[2]</b> The at94K devices are a combination of FPGA and AVR
microcontroller. [TRoth-2002/11/12: Not sure of the level of support for
these. More information would be welcomed.]

\anchor supp_dev_footnote_three

\note <b>[3]</b> The at76c711 is a USB to fast serial interface bridge chip
using an AVR core.

*/

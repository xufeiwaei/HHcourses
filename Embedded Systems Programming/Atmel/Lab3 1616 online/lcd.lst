   1               		.file	"lcd.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  84               	.global	writeDigit
  86               	writeDigit:
   1:lcd.c         **** #include "TinyTimber.h"
   2:lcd.c         **** #include "lcd.h"
   3:lcd.c         **** #include <avr/io.h>
   4:lcd.c         **** 
   5:lcd.c         **** #define clrscr {LCDDR0&=0x66;LCDDR1&=0x66;LCDDR2&=0x66;LCDDR5=0x00;LCDDR6=0x00;LCDDR7=0x00;LCDDR10=
   6:lcd.c         **** 
   7:lcd.c         **** static int seg[]={0x1551,0x8110,0x11e1,0x11b1,0x05b0,0x14b1,0x14f1,0x1110,0x15f1,0x15b1};
   8:lcd.c         **** 
   9:lcd.c         **** int  writeDigit(LCD *self, int digitPos)
  10:lcd.c         **** {
  87               	/
  88               		movw r30,r22
  90               	.LM1:
  91               		movw r24,r22
  92 0000 FB01      		ldi r22,lo8(10)
  11:lcd.c         **** gitPos%10)
  93               	23,hi8(10)
  94               		call __divmodhi4
  95 0002 CB01      		cpi r24,2
  96 0004 6AE0      		cpc r25,__zero_reg__
  97 0006 70E0      		brne .+2
  98 0008 0E94 0000 		rjmp .L5
  99 000c 8230      		cpi r24,3
 100 000e 9105      		cpc r25,__zero_reg__
 101 0010 01F4      		brge .L9
 102 0012 00C0      		sbiw r24,0
 103 0014 8330      		breq .L3
 104 0016 9105      		sbiw r24,1
 105 0018 04F4      		breq .+2
 106 001a 0097      		rjmp .L11
 107 001c 01F0      		rjmp .L12
 108 001e 0197      	.L9:
 109 0020 01F0      		cpi r24,4
 110 0022 00C0      		cpc r25,__zero_reg__
 111 0024 00C0      		brne .+2
 112               		rjmp .L7
 113 0026 8430      		cpi r24,4
 114 0028 9105      		cpc r25,__zero_reg__
 115 002a 01F4      		brge .+2
 116 002c 00C0      		rjmp .L6
 117 002e 8430      		sbiw r24,5
 118 0030 9105      		breq .+2
 119 0032 04F4      		rjmp .L11
 120 0034 00C0      		rjmp .L13
 121 0036 0597      	.L3:
 123 003a 00C0      	.LM2:
 124 003c 00C0      		lds r20,236
 125               		movw r24,r30
  12:lcd.c         **** {
  13:lcd.c         **** 		case 0:
  14:lcd.c         **** 		{
  15:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
 126               	
 127               		call __divmodhi4
 128 003e 4091 EC00 		movw r30,r22
 129 0042 CF01      		lsl r30
 130 0044 6AE0      		rol r31
 131 0046 70E0      		subi r30,lo8(-(seg))
 132 0048 0E94 0000 		sbci r31,hi8(-(seg))
 133 004c FB01      		ld r18,Z
 134 004e EE0F      		ldd r19,Z+1
 135 0050 FF1F      		mov r24,r19
 136 0052 E050      		swap r24
 137 0054 F040      		andi r24,lo8(15)
 138 0056 2081      		andi r20,lo8(-16)
 139 0058 3181      		or r20,r24
 140 005a 832F      		sts 236,r20
 142 005e 8F70      	.LM3:
 143 0060 407F      		lds r20,241
 144 0062 482B      		mov r24,r19
 145 0064 4093 EC00 		clr r25
  16:lcd.c         **** CDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 146               	5
 147               		andi r24,lo8(15)
 148 0068 4091 F100 		andi r20,lo8(-16)
 149 006c 832F      		or r24,r20
 150 006e 9927      		sts 241,r24
 152 0072 9A95      	.LM4:
 153 0074 8F70      		lds r20,246
 154 0076 407F      		movw r24,r18
 155 0078 842B      		ldi r30,4
 156 007a 8093 F100 	1:	asr r25
  17:lcd.c         **** 		LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 157               	ec r30
 158               		brne 1b
 159 007e 4091 F600 		andi r24,lo8(15)
 160 0082 C901      		andi r20,lo8(-16)
 161 0084 E4E0      		or r24,r20
 162 0086 9595      		sts 246,r24
 164 008a EA95      	.LM5:
 165 008c 01F4      		lds r24,251
 166 008e 8F70      		andi r18,lo8(15)
 167 0090 407F      		andi r24,lo8(-16)
 168 0092 842B      		or r18,r24
 169 0094 8093 F600 		sts 251,r18
  18:lcd.c         **** seg[digitPos/10]>>12)&0x000f);
 170               	stabn	68,0,23,.LM6-.LFBB1
 171               	.LM6:
 172 0098 8091 FB00 		lds r18,236
 173 009c 2F70      		movw r24,r30
 174 009e 807F      		ldi r22,lo8(10)
 175 00a0 282B      		ldi r23,hi8(10)
 176 00a2 2093 FB00 		call __divmodhi4
 177 00a6 0895      		movw r30,r22
 178               		lsl r30
  19:lcd.c         **** 		LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
  20:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  21:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  22:lcd.c         **** 			break;
  23:lcd.c         **** 		}
 179               		subi r30,lo8(-(seg))
 180               		sbci r31,hi8(-(seg))
 181 00a8 2091 EC00 		ld r20,Z
 182 00ac CF01      		ldd r21,Z+1
 183 00ae 6AE0      		mov r24,r21
 184 00b0 70E0      		clr r25
 185 00b2 0E94 0000 		sbrc r24,7
 186 00b6 FB01      		dec r25
 187 00b8 EE0F      		andi r24,lo8(-16)
 188 00ba FF1F      		andi r18,lo8(15)
 189 00bc E050      		or r24,r18
 190 00be F040      		sts 236,r24
 192 00c2 5181      	.LM7:
 193 00c4 852F      		lds r18,241
 194 00c6 9927      		movw r24,r20
 195 00c8 87FD      		ldi r19,4
 196 00ca 9A95      	1:	asr r25
 197 00cc 807F      		ror r24
 198 00ce 2F70      		dec r19
 199 00d0 822B      		brne 1b
 200 00d2 8093 EC00 		andi r24,lo8(-16)
  24:lcd.c         **** e 1:
 201               	r24,r18
 202               		sts 241,r24
 204 00da CA01      	.LM8:
 205 00dc 34E0      		lds r24,246
 206 00de 9595      		mov r25,r20
 207 00e0 8795      		andi r25,lo8(-16)
 208 00e2 3A95      		andi r24,lo8(15)
 209 00e4 01F4      		or r25,r24
 210 00e6 807F      		sts 246,r25
 212 00ea 822B      	.LM9:
 213 00ec 8093 F100 		lds r24,251
  25:lcd.c         **** 00f);
 214               		lsl r20
 215               		rol r21
 216 00f0 8091 F600 		dec r27
 217 00f4 942F      		brne 1b
 218 00f6 907F      		andi r24,lo8(15)
 219 00f8 8F70      		or r24,r20
 220 00fa 982B      		sts 251,r24
 221 00fc 9093 F600 		ret
  26:lcd.c         **** ch(digitPos%10)
 222               	tabn	68,0,31,.LM10-.LFBB1
 223               	.LM10:
 224 0100 8091 FB00 		lds r20,237
 225 0104 B4E0      		movw r24,r30
 226 0106 440F      		ldi r22,lo8(10)
 227 0108 551F      		ldi r23,hi8(10)
 228 010a BA95      		call __divmodhi4
 229 010c 01F4      		movw r30,r22
 230 010e 8F70      		lsl r30
 231 0110 842B      		rol r31
 232 0112 8093 FB00 		subi r30,lo8(-(seg))
 233 0116 0895      		sbci r31,hi8(-(seg))
 234               		ld r18,Z
  27:lcd.c         **** {
  28:lcd.c         **** 		case 0:
  29:lcd.c         **** 		{
  30:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
  31:lcd.c         **** 			LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 235               		mov r24,r19
 236               		swap r24
 237 0118 4091 ED00 		andi r24,lo8(15)
 238 011c CF01      		andi r20,lo8(-16)
 239 011e 6AE0      		or r20,r24
 240 0120 70E0      		sts 237,r20
 242 0126 FB01      	.LM11:
 243 0128 EE0F      		lds r20,242
 244 012a FF1F      		mov r24,r19
 245 012c E050      		clr r25
 246 012e F040      		sbrc r24,7
 247 0130 2081      		dec r25
 248 0132 3181      		andi r24,lo8(15)
 249 0134 832F      		andi r20,lo8(-16)
 250 0136 8295      		or r24,r20
 251 0138 8F70      		sts 242,r24
 253 013c 482B      	.LM12:
 254 013e 4093 ED00 		lds r20,247
  32:lcd.c         **** DDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 255               	30,4
 256               	1:	asr r25
 257 0142 4091 F200 		ror r24
 258 0146 832F      		dec r30
 259 0148 9927      		brne 1b
 260 014a 87FD      		andi r24,lo8(15)
 261 014c 9A95      		andi r20,lo8(-16)
 262 014e 8F70      		or r24,r20
 263 0150 407F      		sts 247,r24
 265 0154 8093 F200 	.LM13:
  33:lcd.c         **** seg[digitPos/10]>>12)&0x000f);
 266               	2
 267               		andi r18,lo8(15)
 268 0158 4091 F700 		andi r24,lo8(-16)
 269 015c C901      		or r18,r24
 270 015e E4E0      		sts 252,r18
 271 0160 9595      		ret
 272 0162 8795      	.L6:
 274 0166 01F4      	.LM14:
 275 0168 8F70      		lds r18,237
 276 016a 407F      		movw r24,r30
 277 016c 842B      		ldi r22,lo8(10)
 278 016e 8093 F700 		ldi r23,hi8(10)
  34:lcd.c         **** 		LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 279               	dhi4
 280               		movw r30,r22
 281 0172 8091 FC00 		lsl r30
 282 0176 2F70      		rol r31
 283 0178 807F      		subi r30,lo8(-(seg))
 284 017a 282B      		sbci r31,hi8(-(seg))
 285 017c 2093 FC00 		ld r20,Z
 286 0180 0895      		ldd r21,Z+1
 287               		mov r24,r21
  35:lcd.c         **** 		LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  36:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  37:lcd.c         **** 			break;
  38:lcd.c         **** 		}
  39:lcd.c         **** 		case 1:
 288               		sbrc r24,7
 289               		dec r25
 290 0182 2091 ED00 		andi r24,lo8(-16)
 291 0186 CF01      		andi r18,lo8(15)
 292 0188 6AE0      		or r24,r18
 293 018a 70E0      		sts 237,r24
 295 0190 FB01      	.LM15:
 296 0192 EE0F      		lds r18,242
 297 0194 FF1F      		movw r24,r20
 298 0196 E050      		ldi r19,4
 299 0198 F040      	1:	asr r25
 300 019a 4081      		ror r24
 301 019c 5181      		dec r19
 302 019e 852F      		brne 1b
 303 01a0 9927      		andi r24,lo8(-16)
 304 01a2 87FD      		andi r18,lo8(15)
 305 01a4 9A95      		or r24,r18
 306 01a6 807F      		sts 242,r24
 308 01aa 822B      	.LM16:
 309 01ac 8093 ED00 		lds r24,247
  40:lcd.c         **** 00f);
 310               	,lo8(-16)
 311               		andi r24,lo8(15)
 312 01b0 2091 F200 		or r25,r24
 313 01b4 CA01      		sts 247,r25
 315 01b8 9595      	.LM17:
 316 01ba 8795      		lds r24,252
 317 01bc 3A95      		ldi r27,4
 318 01be 01F4      	1:	lsl r20
 319 01c0 807F      		rol r21
 320 01c2 2F70      		dec r27
 321 01c4 822B      		brne 1b
 322 01c6 8093 F200 		andi r24,lo8(15)
  41:lcd.c         **** ch(digitPos%10)
 323               	sts 252,r24
 324               		ret
 325 01ca 8091 F700 	.L7:
 327 01d0 907F      	.LM18:
 328 01d2 8F70      		lds r20,238
 329 01d4 982B      		movw r24,r30
 330 01d6 9093 F700 		ldi r22,lo8(10)
  42:lcd.c         **** {
 331               	,hi8(10)
 332               		call __divmodhi4
 333 01da 8091 FC00 		movw r30,r22
 334 01de B4E0      		lsl r30
 335 01e0 440F      		rol r31
 336 01e2 551F      		subi r30,lo8(-(seg))
 337 01e4 BA95      		sbci r31,hi8(-(seg))
 338 01e6 01F4      		ld r18,Z
 339 01e8 8F70      		ldd r19,Z+1
 340 01ea 842B      		mov r24,r19
 341 01ec 8093 FC00 		swap r24
 342 01f0 0895      		andi r24,lo8(15)
 343               		andi r20,lo8(-16)
  43:lcd.c         **** 	case 0:
  44:lcd.c         **** 		{
  45:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
  46:lcd.c         **** 			LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
  47:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 344               	sts 238,r20
 346 01f2 4091 EE00 	.LM19:
 347 01f6 CF01      		lds r20,243
 348 01f8 6AE0      		mov r24,r19
 349 01fa 70E0      		clr r25
 350 01fc 0E94 0000 		sbrc r24,7
 351 0200 FB01      		dec r25
 352 0202 EE0F      		andi r24,lo8(15)
 353 0204 FF1F      		andi r20,lo8(-16)
 354 0206 E050      		or r24,r20
 355 0208 F040      		sts 243,r24
 357 020c 3181      	.LM20:
 358 020e 832F      		lds r20,248
 359 0210 8295      		movw r24,r18
 360 0212 8F70      		ldi r30,4
 361 0214 407F      	1:	asr r25
 362 0216 482B      		ror r24
 363 0218 4093 EE00 		dec r30
  48:lcd.c         **** DDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
 364               	o8(15)
 365               		andi r20,lo8(-16)
 366 021c 4091 F300 		or r24,r20
 367 0220 832F      		sts 248,r24
 369 0224 87FD      	.LM21:
 370 0226 9A95      		lds r24,253
 371 0228 8F70      		andi r18,lo8(15)
 372 022a 407F      		andi r24,lo8(-16)
 373 022c 842B      		or r18,r24
 374 022e 8093 F300 		sts 253,r18
  49:lcd.c         ****  ((seg[digitPos/10]>>8)&0x000f);
 376               	.LM22:
 377 0232 4091 F800 		lds r18,238
 378 0236 C901      		movw r24,r30
 379 0238 E4E0      		ldi r22,lo8(10)
 380 023a 9595      		ldi r23,hi8(10)
 381 023c 8795      		call __divmodhi4
 382 023e EA95      		movw r30,r22
 383 0240 01F4      		lsl r30
 384 0242 8F70      		rol r31
 385 0244 407F      		subi r30,lo8(-(seg))
 386 0246 842B      		sbci r31,hi8(-(seg))
 387 0248 8093 F800 		ld r20,Z
  50:lcd.c         **** ch(digitPos%10)
 388               		mov r24,r21
 389               		clr r25
 390 024c 8091 FD00 		sbrc r24,7
 391 0250 2F70      		dec r25
 392 0252 807F      		andi r24,lo8(-16)
 393 0254 282B      		andi r18,lo8(15)
 394 0256 2093 FD00 		or r24,r18
 395 025a 0895      		sts 238,r24
  51:lcd.c         **** {
  52:lcd.c         **** 		case 0:
  53:lcd.c         **** 		{
  54:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
  55:lcd.c         **** 			LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 397               	ds r18,243
 398               		movw r24,r20
 399 025c 2091 EE00 		ldi r19,4
 400 0260 CF01      	1:	asr r25
 401 0262 6AE0      		ror r24
 402 0264 70E0      		dec r19
 403 0266 0E94 0000 		brne 1b
 404 026a FB01      		andi r24,lo8(-16)
 405 026c EE0F      		andi r18,lo8(15)
 406 026e FF1F      		or r24,r18
 407 0270 E050      		sts 243,r24
 409 0274 4081      	.LM24:
 410 0276 5181      		lds r24,248
 411 0278 852F      		mov r25,r20
 412 027a 9927      		andi r25,lo8(-16)
 413 027c 87FD      		andi r24,lo8(15)
 414 027e 9A95      		or r25,r24
 415 0280 807F      		sts 248,r25
 417 0284 822B      	.LM25:
 418 0286 8093 EE00 		lds r24,253
  56:lcd.c         **** DDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 419               		rol r21
 420               		dec r25
 421 028a 2091 F300 		brne 1b
 422 028e CA01      		andi r24,lo8(15)
 423 0290 34E0      		or r24,r20
 424 0292 9595      		sts 253,r24
 425 0294 8795      	.L11:
 427 0298 01F4      	.LM26:
 428 029a 807F      		ret
 430 029e 822B      	.Lscope1:
  57:lcd.c         **** seg[digitPos/10]>>12)&0x000f);
 432               	:P(0,16)",64,0,0,24
 433               	.global	writeInt
 435 02a8 942F      	writeInt:
 437 02ac 8F70      	.LM27:
 438 02ae 982B      	.LFBB2:
 439 02b0 9093 F800 		push r6
  58:lcd.c         **** 		LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 440               	
 441               		push r9
 442 02b4 8091 FD00 		push r10
 443 02b8 94E0      		push r11
 444 02ba 440F      		push r12
 445 02bc 551F      		push r13
 446 02be 9A95      		push r14
 447 02c0 01F4      		push r15
 448 02c2 8F70      		push r16
 449 02c4 842B      		push r17
 450 02c6 8093 FD00 		push r29
 451               		push r28
  59:lcd.c         **** 		LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  60:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  61:lcd.c         **** 			break;
  62:lcd.c         **** 		}
  63:lcd.c         **** 		case 1:
 452               	call .
 453               		rcall .
 454 02ca 0895      		in r28,__SP_L__
 455               		in r29,__SP_H__
 456               	/* prologue: function */
 457               	/* frame size = 6 */
 458               		mov r17,r22
 459               		mov r20,r23
 461               	.LM28:
  64:lcd.c         **** 00f);
  65:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  66:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  67:lcd.c         **** 			break;
 462               	36
 463               		andi r24,lo8(102)
 464               		sts 236,r24
 465 02cc 6F92      		lds r24,237
 466 02ce 7F92      		andi r24,lo8(102)
 467 02d0 9F92      		sts 237,r24
 468 02d2 AF92      		lds r24,238
 469 02d4 BF92      		andi r24,lo8(102)
 470 02d6 CF92      		sts 238,r24
 471 02d8 DF92      		sts 241,__zero_reg__
 472 02da EF92      		sts 242,__zero_reg__
 473 02dc FF92      		sts 243,__zero_reg__
 474 02de 0F93      		sts 246,__zero_reg__
 475 02e0 1F93      		sts 247,__zero_reg__
 476 02e2 DF93      		sts 248,__zero_reg__
 477 02e4 CF93      		sts 251,__zero_reg__
 478 02e6 00D0      		sts 252,__zero_reg__
 479 02e8 00D0      		sts 253,__zero_reg__
 480 02ea 00D0      		mov r18,r22
 481 02ec CDB7      		mov r19,r23
 482 02ee DEB7      		movw r24,r18
 483               		clr r9
 484               		inc r9
 485 02f0 162F      		rjmp .L15
 486 02f2 472F      	.L16:
  68:lcd.c         **** tPos/10]>>8)&0x000f);
  69:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  70:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  71:lcd.c         **** 			break;
 487               	BB2
 488               	.LM29:
 489 02f4 8091 EC00 		inc r9
 490 02f8 8676      	.L15:
 491 02fa 8093 EC00 		ldi r22,lo8(10)
 492 02fe 8091 ED00 		ldi r23,hi8(10)
 493 0302 8676      		call __divmodhi4
 494 0304 8093 ED00 		movw r24,r22
 495 0308 8091 EE00 		cp r22,__zero_reg__
 496 030c 8676      		cpc r23,__zero_reg__
 497 030e 8093 EE00 		brne .L16
 499 0316 1092 F200 	.LM30:
 500 031a 1092 F300 		ldi r24,lo8(6)
 501 031e 1092 F600 		cp r24,r9
 502 0322 1092 F700 		brsh .L17
 503 0326 1092 F800 		ldi r22,lo8(6)
 504 032a 1092 FB00 		mov r9,r22
 505 032e 1092 FC00 	.L17:
 506 0332 1092 FD00 		mov r19,r9
 507 0336 262F      		ldi r18,lo8(5)
 509 033a C901      	.LM31:
 510 033c 9924      		movw r14,r28
 511 033e 9394      		sec
 512 0340 00C0      		adc r14,__zero_reg__
 513               		adc r15,__zero_reg__
  72:lcd.c         **** tPos/10]>>8)&0x000f);
  73:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 514               	r14
 515               		add r30,r18
 516 0342 9394      		adc r31,__zero_reg__
 517               		mov r24,r17
 518 0344 6AE0      		mov r25,r20
 519 0346 70E0      		ldi r22,lo8(10)
 520 0348 0E94 0000 		ldi r23,hi8(10)
 521 034c CB01      		call __divmodhi4
 522 034e 6115      		st Z,r24
 524 0352 01F4      	.LM32:
  74:lcd.c         **** seg[digitPos/10]>>12)&0x000f);
 525               	7
 526               		mov r25,r20
 527 0354 86E0      		ldi r22,lo8(10)
 528 0356 8915      		ldi r23,hi8(10)
 529 0358 00F4      		call __divmodhi4
 530 035a 66E0      		mov r17,r22
 531 035c 962E      		mov r20,r23
 533 035e 392D      	.LM33:
 534 0360 25E0      		subi r18,lo8(-(-1))
  75:lcd.c         **** 		LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
  76:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  77:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  78:lcd.c         **** 			break;
 535               	lo8(-(-1))
 536               	.L18:
 538 0364 0894      	.LM34:
 539 0366 E11C      		tst r19
 540 0368 F11C      		brne .L19
 542               	.LM35:
 543 036c F701      		ldd r24,Y+1
 544 036e E20F      		mov r10,r24
 545 0370 F11D      		clr r11
 547 0374 942F      	.LM36:
 548 0376 6AE0      		ldd r24,Y+2
 549 0378 70E0      		mov r12,r24
 550 037a 0E94 0000 		clr r13
  79:lcd.c         **** 		case 1:
 552               	+3
 553               		mov r14,r24
 554 0380 812F      		clr r15
 556 0384 6AE0      	.LM38:
 557 0386 70E0      		ldd r24,Y+4
 558 0388 0E94 0000 		mov r16,r24
 559 038c 162F      		ldi r17,lo8(0)
  80:lcd.c         **** 00f);
 561               	dd r24,Y+5
 562               		mov r26,r24
 563 0390 2150      		ldi r27,lo8(0)
 565               	.LM40:
 566               		ldd r24,Y+6
 567               		mov r6,r24
 568 0394 3323      		clr r7
 569 0396 01F4      		ldi r22,lo8(5)
  81:lcd.c         **** ch(digitPos%10)
  82:lcd.c         **** 	{
  83:lcd.c         **** 		case 0:
  84:lcd.c         **** 		{
  85:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
  86:lcd.c         **** 			LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
  87:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
  88:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
  89:lcd.c         **** 			break;
  90:lcd.c         **** 		}
 570               	8,0,106,.LM41-.LFBB2
 571               	.LM41:
 572 0398 8981      		lsl r14
 573 039a A82E      		rol r15
 574 039c BB24      		ldi r30,lo8(seg)
  91:lcd.c         **** 		{
  92:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0x0f) | ((seg[digitPos/10]>>8)&0x00f0);
  93:lcd.c         **** 			LCDDR5 = (LCDDR5 & 0x0f) | ((seg[digitPos/10]>>4)&0x00f0);
  94:lcd.c         **** 			LCDDR10 = (LCDDR10 & 0x0f) | ((seg[digitPos/10])&0x00f0);
  95:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0x0f) | ((seg[digitPos/10]<<4)&0x00f0);
  96:lcd.c         **** 			break;
  97:lcd.c         **** 		}
  98:lcd.c         **** 		case 2:
 575               	r31,hi8(seg)
 576               		add r14,r30
 577 039e 8A81      		adc r15,r31
 579 03a2 DD24      	.LM42:
  99:lcd.c         **** CDDR10 = (LCDDR10 & 0x0f) | ((seg[digitPos/10])&0x00f0);
 100:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0x0f) | ((seg[digitPos/10]<<4)&0x00f0);
 101:lcd.c         **** 			break;
 102:lcd.c         **** 		}
 103:lcd.c         **** 		case 2:
 104:lcd.c         **** 		{
 105:lcd.c         **** 			LCDDR1 = (LCDDR1 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
 106:lcd.c         **** 			LCDDR6 = (LCDDR6 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 580               	r26
 581               		rol r27
 582 03a4 8B81      		add r26,r30
 583 03a6 E82E      		adc r27,r31
 107:lcd.c         **** 	}
 108:lcd.c         **** 		case 2:
 109:lcd.c         **** 		{
 110:lcd.c         **** 			LCDDR1 = (LCDDR1 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
 111:lcd.c         **** 			LCDDR6 = (LCDDR6 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 112:lcd.c         **** 			LCDDR11 = (LCDDR11 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 113:lcd.c         **** 			LCDDR16 = (LCDDR16 & 0xf0) | (seg[digitPos/10]&0x000f);
 114:lcd.c         **** 			break;
 585               	:
 586               		lsl r16
 587 03aa 8C81      		rol r17
 588 03ac 082F      		add r16,r30
 589 03ae 10E0      		adc r17,r31
 115:lcd.c         **** 00f);
 116:lcd.c         **** 			LCDDR11 = (LCDDR11 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 117:lcd.c         **** 			LCDDR16 = (LCDDR16 & 0xf0) | (seg[digitPos/10]&0x000f);
 118:lcd.c         **** 			break;
 119:lcd.c         **** 		}
 120:lcd.c         **** 		case 3:
 121:lcd.c         **** 		{
 122:lcd.c         **** 			LCDDR1 = (LCDDR1 & 0x0f) | ((seg[digitPos/10]>>8)&0x00f0);
 590               	bn	68,0,130,.LM44-.LFBB2
 591               	.LM44:
 592 03b0 8D81      		lsl r6
 593 03b2 A82F      		rol r7
 594 03b4 B0E0      		add r6,r30
 123:lcd.c         **** LCDDR16 & 0xf0) | (seg[digitPos/10]&0x000f);
 124:lcd.c         **** 			break;
 125:lcd.c         **** 		}
 126:lcd.c         **** 		case 3:
 127:lcd.c         **** 		{
 128:lcd.c         **** 			LCDDR1 = (LCDDR1 & 0x0f) | ((seg[digitPos/10]>>8)&0x00f0);
 129:lcd.c         **** 			LCDDR6 = (LCDDR6 & 0x0f) | ((seg[digitPos/10]>>4)&0x00f0);
 130:lcd.c         **** 			LCDDR11 = (LCDDR11 & 0x0f) | ((seg[digitPos/10])&0x00f0);
 595               	r7,r31
 597 03b6 8E81      	.LM45:
 598 03b8 682E      		lsl r10
 599 03ba 7724      		rol r11
 600 03bc 65E0      		add r10,r30
 601               		adc r11,r31
 603 03be EE0C      	.LM46:
 604 03c0 FF1C      		lsl r12
 605 03c2 E0E0      		rol r13
 606 03c4 F0E0      		add r12,r30
 607 03c6 EE0E      		adc r13,r31
 608 03c8 FF1E      		rjmp .L20
 609               	.L29:
 611 03ca AA0F      	.LM47:
 612 03cc BB1F      		cpi r22,lo8(2)
 613 03ce AE0F      		brne .+2
 614 03d0 BF1F      		rjmp .L24
 615               		cpi r22,lo8(3)
 616               		brsh .L28
 617 03d2 000F      		tst r22
 618 03d4 111F      		breq .L22
 619 03d6 0E0F      		cpi r22,lo8(1)
 620 03d8 1F1F      		breq .+2
 621               		rjmp .L21
 622               		rjmp .L31
 623 03da 660C      	.L28:
 624 03dc 771C      		cpi r22,lo8(4)
 625 03de 6E0E      		brne .+2
 626 03e0 7F1E      		rjmp .L26
 627               		cpi r22,lo8(4)
 628               		brsh .+2
 629 03e2 AA0C      		rjmp .L25
 630 03e4 BB1C      		cpi r22,lo8(5)
 631 03e6 AE0E      		breq .+2
 632 03e8 BF1E      		rjmp .L21
 633               		rjmp .L32
 634               	.L22:
 636 03ec DD1C      	.LM48:
 637 03ee CE0E      		lds r24,236
 638 03f0 DF1E      		movw r30,r10
 639 03f2 00C0      		ld r18,Z
 640               		ldd r19,Z+1
 641               		mov r25,r19
 642               		swap r25
 643 03f4 6230      		andi r25,lo8(15)
 644 03f6 01F4      		andi r24,lo8(-16)
 645 03f8 00C0      		or r24,r25
 646 03fa 6330      		sts 236,r24
 648 03fe 6623      	.LM49:
 649 0400 01F0      		lds r20,241
 650 0402 6130      		mov r24,r19
 651 0404 01F0      		clr r25
 652 0406 00C0      		sbrc r24,7
 653 0408 00C0      		dec r25
 654               		andi r24,lo8(15)
 655 040a 6430      		andi r20,lo8(-16)
 656 040c 01F4      		or r24,r20
 657 040e 00C0      		sts 241,r24
 659 0412 00F4      	.LM50:
 660 0414 00C0      		lds r20,246
 661 0416 6530      		movw r24,r18
 662 0418 01F0      		ldi r30,4
 663 041a 00C0      	1:	asr r25
 664 041c 00C0      		ror r24
 665               		dec r30
 666               		brne 1b
 667               		andi r24,lo8(15)
 668 041e 8091 EC00 		andi r20,lo8(-16)
 669 0422 F501      		or r24,r20
 670 0424 2081      		sts 246,r24
 672 0428 932F      	.LM51:
 673 042a 9295      		lds r24,251
 674 042c 9F70      		andi r18,lo8(15)
 675 042e 807F      		andi r24,lo8(-16)
 676 0430 892B      		or r18,r24
 677 0432 8093 EC00 		sts 251,r18
 678               		rjmp .L21
 679               	.L31:
 681 043a 832F      	.LM52:
 682 043c 9927      		lds r18,236
 683 043e 87FD      		movw r30,r12
 684 0440 9A95      		ld r20,Z
 685 0442 8F70      		ldd r21,Z+1
 686 0444 407F      		mov r24,r21
 687 0446 842B      		clr r25
 688 0448 8093 F100 		sbrc r24,7
 689               		dec r25
 690               		andi r24,lo8(-16)
 691 044c 4091 F600 		andi r18,lo8(15)
 692 0450 C901      		or r24,r18
 693 0452 E4E0      		sts 236,r24
 695 0456 8795      	.LM53:
 696 0458 EA95      		lds r18,241
 697 045a 01F4      		movw r24,r20
 698 045c 8F70      		ldi r19,4
 699 045e 407F      	1:	asr r25
 700 0460 842B      		ror r24
 701 0462 8093 F600 		dec r19
 702               		brne 1b
 703               		andi r24,lo8(-16)
 704 0466 8091 FB00 		andi r18,lo8(15)
 705 046a 2F70      		or r24,r18
 706 046c 807F      		sts 241,r24
 708 0470 2093 FB00 	.LM54:
 709 0474 00C0      		lds r24,246
 710               		mov r25,r20
 711               		andi r25,lo8(-16)
 712               		andi r24,lo8(15)
 713 0476 2091 EC00 		or r25,r24
 714 047a F601      		sts 246,r25
 716 047e 5181      	.LM55:
 717 0480 852F      		lds r24,251
 718 0482 9927      		ldi r25,4
 719 0484 87FD      	1:	lsl r20
 720 0486 9A95      		rol r21
 721 0488 807F      		dec r25
 722 048a 2F70      		brne 1b
 723 048c 822B      		andi r24,lo8(15)
 724 048e 8093 EC00 		or r24,r20
 725               		sts 251,r24
 726               		rjmp .L21
 727 0492 2091 F100 	.L24:
 729 0498 34E0      	.LM56:
 730 049a 9595      		lds r24,237
 731 049c 8795      		movw r30,r14
 732 049e 3A95      		ld r18,Z
 733 04a0 01F4      		ldd r19,Z+1
 734 04a2 807F      		mov r25,r19
 735 04a4 2F70      		swap r25
 736 04a6 822B      		andi r25,lo8(15)
 737 04a8 8093 F100 		andi r24,lo8(-16)
 738               		or r24,r25
 739               		sts 237,r24
 741 04b0 942F      	.LM57:
 742 04b2 907F      		lds r20,242
 743 04b4 8F70      		mov r24,r19
 744 04b6 982B      		clr r25
 745 04b8 9093 F600 		sbrc r24,7
 746               		dec r25
 747               		andi r24,lo8(15)
 748 04bc 8091 FB00 		andi r20,lo8(-16)
 749 04c0 94E0      		or r24,r20
 750 04c2 440F      		sts 242,r24
 752 04c6 9A95      	.LM58:
 753 04c8 01F4      		lds r20,247
 754 04ca 8F70      		movw r24,r18
 755 04cc 842B      		ldi r30,4
 756 04ce 8093 FB00 	1:	asr r25
 757 04d2 00C0      		ror r24
 758               		dec r30
 759               		brne 1b
 760               		andi r24,lo8(15)
 761 04d4 8091 ED00 		andi r20,lo8(-16)
 762 04d8 F701      		or r24,r20
 763 04da 2081      		sts 247,r24
 765 04de 932F      	.LM59:
 766 04e0 9295      		lds r24,252
 767 04e2 9F70      		andi r18,lo8(15)
 768 04e4 807F      		andi r24,lo8(-16)
 769 04e6 892B      		or r18,r24
 770 04e8 8093 ED00 		sts 252,r18
 771               		rjmp .L21
 772               	.L25:
 774 04f0 832F      	.LM60:
 775 04f2 9927      		lds r18,237
 776 04f4 87FD      		movw r30,r16
 777 04f6 9A95      		ld r20,Z
 778 04f8 8F70      		ldd r21,Z+1
 779 04fa 407F      		mov r24,r21
 780 04fc 842B      		clr r25
 781 04fe 8093 F200 		sbrc r24,7
 782               		dec r25
 783               		andi r24,lo8(-16)
 784 0502 4091 F700 		andi r18,lo8(15)
 785 0506 C901      		or r24,r18
 786 0508 E4E0      		sts 237,r24
 788 050c 8795      	.LM61:
 789 050e EA95      		lds r18,242
 790 0510 01F4      		movw r24,r20
 791 0512 8F70      		ldi r19,4
 792 0514 407F      	1:	asr r25
 793 0516 842B      		ror r24
 794 0518 8093 F700 		dec r19
 795               		brne 1b
 796               		andi r24,lo8(-16)
 797 051c 8091 FC00 		andi r18,lo8(15)
 798 0520 2F70      		or r24,r18
 799 0522 807F      		sts 242,r24
 801 0526 2093 FC00 	.LM62:
 802 052a 00C0      		lds r24,247
 803               		mov r25,r20
 804               		andi r25,lo8(-16)
 805               		andi r24,lo8(15)
 806 052c 2091 ED00 		or r25,r24
 807 0530 F801      		sts 247,r25
 809 0534 5181      	.LM63:
 810 0536 852F      		lds r24,252
 811 0538 9927      		ldi r25,4
 812 053a 87FD      	1:	lsl r20
 813 053c 9A95      		rol r21
 814 053e 807F      		dec r25
 815 0540 2F70      		brne 1b
 816 0542 822B      		andi r24,lo8(15)
 817 0544 8093 ED00 		or r24,r20
 818               		sts 252,r24
 819               		rjmp .L21
 820 0548 2091 F200 	.L26:
 822 054e 34E0      	.LM64:
 823 0550 9595      		lds r24,238
 824 0552 8795      		ld r18,X+
 825 0554 3A95      		ld r19,X
 826 0556 01F4      		sbiw r26,1
 827 0558 807F      		mov r25,r19
 828 055a 2F70      		swap r25
 829 055c 822B      		andi r25,lo8(15)
 830 055e 8093 F200 		andi r24,lo8(-16)
 831               		or r24,r25
 832               		sts 238,r24
 834 0566 942F      	.LM65:
 835 0568 907F      		lds r20,243
 836 056a 8F70      		mov r24,r19
 837 056c 982B      		clr r25
 838 056e 9093 F700 		sbrc r24,7
 839               		dec r25
 840               		andi r24,lo8(15)
 841 0572 8091 FC00 		andi r20,lo8(-16)
 842 0576 94E0      		or r24,r20
 843 0578 440F      		sts 243,r24
 845 057c 9A95      	.LM66:
 846 057e 01F4      		lds r20,248
 847 0580 8F70      		movw r24,r18
 848 0582 842B      		ldi r30,4
 849 0584 8093 FC00 	1:	asr r25
 850 0588 00C0      		ror r24
 851               		dec r30
 852               		brne 1b
 853               		andi r24,lo8(15)
 854 058a 8091 EE00 		andi r20,lo8(-16)
 855 058e 2D91      		or r24,r20
 856 0590 3C91      		sts 248,r24
 858 0594 932F      	.LM67:
 859 0596 9295      		lds r24,253
 860 0598 9F70      		andi r18,lo8(15)
 861 059a 807F      		andi r24,lo8(-16)
 862 059c 892B      		or r18,r24
 863 059e 8093 EE00 		sts 253,r18
 864               		rjmp .L21
 865               	.L32:
 867 05a6 832F      	.LM68:
 868 05a8 9927      		lds r18,238
 869 05aa 87FD      		movw r30,r6
 870 05ac 9A95      		ld r20,Z
 871 05ae 8F70      		ldd r21,Z+1
 872 05b0 407F      		mov r24,r21
 873 05b2 842B      		clr r25
 874 05b4 8093 F300 		sbrc r24,7
 875               		dec r25
 876               		andi r24,lo8(-16)
 877 05b8 4091 F800 		andi r18,lo8(15)
 878 05bc C901      		or r24,r18
 879 05be E4E0      		sts 238,r24
 881 05c2 8795      	.LM69:
 882 05c4 EA95      		lds r18,243
 883 05c6 01F4      		movw r24,r20
 884 05c8 8F70      		ldi r19,4
 885 05ca 407F      	1:	asr r25
 886 05cc 842B      		ror r24
 887 05ce 8093 F800 		dec r19
 888               		brne 1b
 889               		andi r24,lo8(-16)
 890 05d2 8091 FD00 		andi r18,lo8(15)
 891 05d6 2F70      		or r24,r18
 892 05d8 807F      		sts 243,r24
 894 05dc 2093 FD00 	.LM70:
 895 05e0 00C0      		lds r24,248
 896               		mov r25,r20
 897               		andi r25,lo8(-16)
 898               		andi r24,lo8(15)
 899 05e2 2091 EE00 		or r25,r24
 900 05e6 F301      		sts 248,r25
 902 05ea 5181      	.LM71:
 903 05ec 852F      		lds r24,253
 904 05ee 9927      		ldi r25,4
 905 05f0 87FD      	1:	lsl r20
 906 05f2 9A95      		rol r21
 907 05f4 807F      		dec r25
 908 05f6 2F70      		brne 1b
 909 05f8 822B      		andi r24,lo8(15)
 910 05fa 8093 EE00 		or r24,r20
 131:lcd.c         **** &0x00f0);
 911               	21:
 913 05fe 2091 F300 	.LM72:
 914 0602 CA01      		subi r22,lo8(-(-1))
 915 0604 34E0      		dec r9
 916 0606 9595      	.L20:
 918 060a 3A95      	.LM73:
 919 060c 01F4      		tst r9
 920 060e 807F      		breq .+2
 921 0610 2F70      		rjmp .L29
 922 0612 822B      	/* epilogue start */
 132:lcd.c         **** LCDDR16 & 0xf0) | (seg[digitPos/10]&0x000f);
 924               	r28,6
 925               		in __tmp_reg__,__SREG__
 926 0618 8091 F800 		cli
 927 061c 942F      		out __SP_H__,r29
 928 061e 907F      		out __SREG__,__tmp_reg__
 929 0620 8F70      		out __SP_L__,r28
 930 0622 982B      		pop r28
 931 0624 9093 F800 		pop r29
 133:lcd.c         **** 10]>>8)&0x000f);
 932               	(-(-1))
 933               		dec r9
 934 0628 8091 FD00 	.L20:
 936 062e 440F      	.LM73:
 937 0630 551F      		tst r9
 938 0632 9A95      		breq .+2
 939 0634 01F4      		rjmp .L29
 940 0636 8F70      	/* epilogue start */
 942 063a 8093 FD00 	.LM74:
 943               		adiw r28,6
 134:lcd.c         **** 	}
 135:lcd.c         **** 		case 2:
 136:lcd.c         **** 		{
 137:lcd.c         **** 			LCDDR1 = (LCDDR1 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
 138:lcd.c         **** 			LCDDR6 = (LCDDR6 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 944               	g__,__SREG__
 945               		cli
 946 063e 6150      		out __SP_H__,r29
 947 0640 9A94      		out __SREG__,__tmp_reg__
 948               		out __SP_L__,r28
 949               		pop r28
 950               		pop r29
 951 0642 9920      		pop r17
 952 0644 01F0      		pop r16
 953 0646 00C0      		pop r15
 954               		pop r14
 139:lcd.c         **** 	}
 140:lcd.c         **** 		case 2:
 955               	M73-.LFBB2
 956               	.LM73:
 957 0648 2696      		tst r9
 958 064a 0FB6      		breq .+2
 959 064c F894      		rjmp .L29
 960 064e DEBF      	/* epilogue start */
 962 0652 CDBF      	.LM74:
 963 0654 CF91      		adiw r28,6
 964 0656 DF91      		in __tmp_reg__,__SREG__
 965 0658 1F91      		cli
 966 065a 0F91      		out __SP_H__,r29
 967 065c FF90      		out __SREG__,__tmp_reg__
 968 065e EF90      		out __SP_L__,r28
 969 0660 DF90      		pop r28
 970 0662 CF90      		pop r29
 971 0664 BF90      		pop r17
 972 0666 AF90      		pop r16
 973 0668 9F90      		pop r15
 974 066a 7F90      		pop r14
 975 066c 6F90      		pop r13
 976 066e 0895      		pop r12
 977               		pop r11
 978               		pop r10
 979               		pop r9
 980               		pop r7
 981               		pop r6
 982               		ret
 990               	.Lscope2:
 141:lcd.c         **** CDDR10 = (LCDDR10 & 0x0f) | ((seg[digitPos/10])&0x00f0);
 142:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0x0f) | ((seg[digitPos/10]<<4)&0x00f0);
 143:lcd.c         **** 			break;
 144:lcd.c         **** 		}
 991               	gmentOn
 994               	.global	segmentOn
 145:lcd.c         **** 00f0);
 996               	",64,0,0,24
 999 0672 7105      	.Lscope2:
 1003 067a 04F4      	.global	segmentOn
 1005 067e 7105      	segmentOn:
 1007 0682 6330      	.LM75:
 1008 0684 7105      	.LFBB3:
 1009 0686 04F4      	/* prologue: function */
 1010 0688 6130      	/* frame size = 0 */
 1012 068c 01F0      	.LM76:
 1013 068e 00C0      		cpi r22,5
 1014 0690 00C0      		cpc r23,__zero_reg__
 1015               		breq .L39
 1016 0692 6330      		cpi r22,6
 1017 0694 7105      		cpc r23,__zero_reg__
 1018 0696 01F0      		brge .L44
 1019 0698 6430      		cpi r22,2
 1020 069a 7105      		cpc r23,__zero_reg__
 1021 069c 01F4      		breq .L36
 1022 069e 00C0      		cpi r22,3
 1023               		cpc r23,__zero_reg__
 1024 06a0 6830      		brge .L45
 1025 06a2 7105      		cpi r22,1
 1026 06a4 01F0      		cpc r23,__zero_reg__
 1027 06a6 6930      		breq .+2
 1028 06a8 7105      		rjmp .L48
 1029 06aa 04F4      		rjmp .L51
 1030 06ac 6730      	.L45:
 1031 06ae 7105      		cpi r22,3
 1032 06b0 01F4      		cpc r23,__zero_reg__
 1033 06b2 00C0      		breq .L37
 1034               		cpi r22,4
 1035 06b4 6930      		cpc r23,__zero_reg__
 1036 06b6 7105      		brne .L48
 1037 06b8 01F0      		rjmp .L52
 1038 06ba 6A30      	.L44:
 1039 06bc 7105      		cpi r22,8
 1040 06be 01F4      		cpc r23,__zero_reg__
 1041 06c0 00C0      		breq .L41
 1042               		cpi r22,9
 146:lcd.c         **** 	break;
 147:lcd.c         **** 		}
 1043               	reg__
 1044               		breq .+2
 1045 06c2 8091 EC00 		rjmp .L48
 1046 06c6 8460      		rjmp .L51
 1047 06c8 00C0      	.L45:
 1048               		cpi r22,3
 148:lcd.c         **** 10]>>8)&0x000f);
 1049               	
 1050               		cpi r22,6
 1051 06ca 8091 EC00 		cpc r23,__zero_reg__
 1052 06ce 8064      		brge .L44
 1053               		cpi r22,2
 1054 06d0 8093 EC00 		cpc r23,__zero_reg__
 1055 06d4 0895      		breq .L36
 1056               		cpi r22,3
 149:lcd.c         **** ch(digitPos%10)
 1057               	 prologue: function */
 1058               	/* frame size = 0 */
 1060 06d8 8093 EF00 	.LM76:
 1061 06dc 0895      		cpi r22,5
 1062               		cpc r23,__zero_reg__
 150:lcd.c         **** {
 1063               	1)",64,0,0,22
 1064               	.global	segmentOn
 1066 06e2 8260      	segmentOn:
 1068               	.LM75:
 151:lcd.c         **** 	case 0:
 1069               	24,0,0,.Lscope2-.LFBB2
 1070               	.Lscope2:
 1074 06ec 8093 ED00 	.global	segmentOn
 1076               	segmentOn:
 152:lcd.c         **** 	{
 153:lcd.c         **** 			LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
 1079 06f2 81E0      	.Lscope2:
 154:lcd.c         **** 	LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 1087 0700 8093 EE00 	.Lscope2:
 155:lcd.c         **** 		LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 1090               	,0,1
 156:lcd.c         **** seg[digitPos/10]>>12)&0x000f);
 157:lcd.c         **** 			LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 1096               	ret
 1104               	.Lscope2:
 158:lcd.c         **** 	LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 159:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
 160:lcd.c         **** 			break;
 161:lcd.c         **** 		}
 1107               	,0,1
 162:lcd.c         **** 10]>>8)&0x000f);
 1112               	pop r10
 1113               		pop r9
 1114 0712 6530      		pop r7
 1115 0714 7105      		pop r6
 1116 0716 01F0      		ret
 1124 0726 7105      	.Lscope2:
 1128 072e 01F4      	.global	segmentOn
 1130               	segmentOn:
 1132 0734 7105      	.LM75:
 1133 0736 01F0      	.LFBB3:
 1134 0738 6430      	/* prologue: function */
 1135 073a 7105      	/* frame size = 0 */
 1137 073e 00C0      	.LM76:
 1138               		cpi r22,5
 1139 0740 6830      		cpc r23,__zero_reg__
 1140 0742 7105      		breq .L39
 1141 0744 01F0      		cpi r22,6
 1142 0746 6930      		cpc r23,__zero_reg__
 1143 0748 7105      		brge .L44
 1144 074a 04F4      		cpi r22,2
 1145 074c 6730      		cpc r23,__zero_reg__
 1146 074e 7105      		breq .L36
 1147 0750 01F4      		cpi r22,3
 1148 0752 00C0      		cpc r23,__zero_reg__
 1149               		brge .L45
 1150 0754 6930      		cpi r22,1
 1151 0756 7105      		cpc r23,__zero_reg__
 1152 0758 01F0      		breq .+2
 1153 075a 6A30      		rjmp .L48
 1154 075c 7105      		rjmp .L51
 1155 075e 01F4      	.L45:
 1156 0760 00C0      		cpi r22,3
 1157               		cpc r23,__zero_reg__
 163:lcd.c         **** ch(digitPos%10)
 164:lcd.c         **** 	{
 1158               	zero_reg__
 1159               		brge .L44
 1160 0762 8091 EC00 		cpi r22,2
 1161 0766 8B7F      		cpc r23,__zero_reg__
 1162 0768 00C0      		breq .L36
 1163               		cpi r22,3
 165:lcd.c         **** case 0:
 1164               	 prologue: function */
 1165               	/* frame size = 0 */
 1167 076e 8F7B      	.LM76:
 1168               		cpi r22,5
 1169 0770 8093 EC00 		cpc r23,__zero_reg__
 1170 0774 0895      		breq .L39
 1171               		cpi r22,6
 166:lcd.c         **** 	{
 1172               	gmentOn
 1174 0776 1092 EF00 	segmentOn:
 1176               	.LM75:
 167:lcd.c         **** 		LCDDR0 = (LCDDR0 & 0xf0) | ((seg[digitPos/10]>>12)&0x000f);
 1177               	24,0,0,.Lscope2-.LFBB2
 1178               	.Lscope2:
 1182               	.global	segmentOn
 168:lcd.c         **** 		LCDDR5 = (LCDDR5 & 0xf0) | ((seg[digitPos/10]>>8)&0x000f);
 1183               	64,0,0,9
 1187               	.Lscope2:
 169:lcd.c         **** 		LCDDR10 = (LCDDR10 & 0xf0) | ((seg[digitPos/10]>>4)&0x000f);
 170:lcd.c         **** 			LCDDR15 = (LCDDR15 & 0xf0) | (seg[digitPos/10]&0x000f);
 1195               	.Lscope2:
 171:lcd.c         ****  ((seg[digitPos/10]>>8)&0x000f);
 1196               	writeInt, .-writeInt
 172:lcd.c         **** ch(digitPos%10)
 1203               	ret
 173:lcd.c         **** {
 174:lcd.c         **** 		case 0:
 1209               	14
 1210               		pop r13
 1211 07ac 0895      		pop r12
 1212               		pop r11
 1213               		pop r10
 1214               		pop r9
 1215               		pop r7
 1216               		pop r6
 1217               		ret
 1225 000e 1011      	.Lscope2:
 1229               	.global	segmentOn
 1231               	segmentOn:
DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:2      *ABS*:0000003f __SREG__
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:3      *ABS*:0000003e __SP_H__
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:4      *ABS*:0000003d __SP_L__
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:5      *ABS*:00000034 __CCP__
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:86     .text:00000000 writeDigit
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:1217   .data:00000000 seg
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:461    .text:000002cc writeInt
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:990    .text:00000670 segmentOn
C:\DOCUME~1\sungao12\LOCALS~1\Temp/ccCc7sQ3.s:1106   .text:00000712 segmentOff

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__divmodhi4

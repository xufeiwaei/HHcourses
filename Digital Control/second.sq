// Relation between roots and coefficients of a polynomial of second degreevariable A	// Polynomialinit (A) = initfigure "Coefficients"	draw drawCoeff(A)	mousedrag (A) = dragCoeff(A,_id,_z0,_z1)	mouseover (_msg, _cursor) = overCoeff(_id,_z0)figure "Roots"	draw drawRoots(A)	mousedrag (A) = dragRoots(A,_id,_z0,_z1)	mouseover (_msg, _cursor) = overRoot(_id,_z0)function{@function (A) = init	A = [1, 0, 0];	subplots('Roots\tCoefficients');function drawRoots(A)		scale('equal',[-1.2,1.2,-1.2,1.2]);	zgrid;	plotroots(A, 'rx', 1);function (A,B) = dragRoots(A,id,z0,z1)		if isempty(id)		cancel;	end	A = movezero(A, z0, z1);function msg = dispComplex(s, z)		if imag(z) == 0		msg = sprintf('%s%.2g', s, z);	elseif imag(z) > 0		msg = sprintf('%s%.2g+%.2gj', s, real(z), imag(z));	else		msg = sprintf('%s%.2g%.2gj', s, real(z), imag(z));	endfunction (msg, cursor) = overRoot(id, z)		if isempty(z)		cancel;	end		if isempty(id)		cancel;	end	cursor = true;	msg = dispComplex('Root: ', z);	function drawCoeff(A)	scale('equal',[-2, 2, -2, 2]);	plot([-2 2 0 -2],[1 1 -1 1],'yf');	plot([-2 2 0 -2],[1 1 -1 1],'r');	plot(A(2), A(3), 'bo', 1);function (A) = dragCoeff(A, id, z0, z1)    if isempty(id)    	cancel;    end;    A = [1 real(z1) imag(z1)];    function (msg, cursor) = overCoeff(id, z)	if isempty(id)		cancel;	end;	cursor = true;	msg = sprintf('a1 = %g, a2 = %g', real(z), imag(z));@}